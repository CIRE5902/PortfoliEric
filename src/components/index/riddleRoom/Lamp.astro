<div id="lamp">
  <div class="cable"></div>
  <div class="block dragable"></div>
  <div class="shade dragable"></div>
  <div class="bulb_wrapper">
    <div class="bulb dragable"></div>
  </div>
</div>

<style is:global>
#lamp {
  top: 0px;
  left: 50%;
  width: 130px;
  transform-origin: 50% 0;
  transform: rotate(0deg);
}

#lamp.swinging {
  transition: all 0.6s ease-in-out;
  animation: swing 2s ease-in-out infinite;
}

@keyframes swing {
  0% { transform: rotate(0deg); }
  50% { transform: rotate(15deg); }
  100% { transform: rotate(0deg); }
}

#lamp .cable {
  width: 6px;
  height: 70px;
  margin: auto;
  background: #4c4c4c;
}

#lamp .block {
  width: 40px;
  height: 40px;
  margin: auto;
  margin-bottom: -10px;
  background: #222;
}

#lamp .shade {
  width: 130px;
  height: 65px;
  background: #222;
  border-top-right-radius: 65px;
  border-top-left-radius: 65px;
}

#lamp .bulb_wrapper {
  position: absolute;
  width: 500px;
  height: 120px;
  overflow: hidden;
  margin-left: -185px;
  z-index: -1;
}

#lamp .bulb_wrapper .bulb {
  z-index: -1;
  width: 44px;
  height: 22px;
  margin-left: 228px;
  background: #8b73cc;
  border-bottom-right-radius: 22px;
  border-bottom-left-radius: 22px;
  box-shadow: 0px 0px 200px 20px #8b73cc;
}

#lamp.off .bulb_wrapper .bulb {
  background: #5d44b5;
  box-shadow: none;
}

@keyframes swingSideToSide {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(-10deg); }
  75% { transform: rotate(10deg); }
}

#lamp.hint {
  animation: swingSideToSide 5s linear infinite;
  cursor: grab;
}
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const lamp = document.getElementById("lamp");

    if (!lamp) return; 

    lamp.classList.add("hint");

    lamp.querySelectorAll(".dragable").forEach((el) => {
      const removeHint = () => lamp.classList.remove("hint");

      el.addEventListener("mousedown", removeHint, { once: true });
      el.addEventListener("touchstart", removeHint, { once: true });
    });

    let speed, swing, rotation = 0,
      time, gravity = 1,
      length = 250,
      startAngle = 0;

    function startLampSwing() {
      time = 0;
      speed = 1;
      lampSwing();
    }

    function stopLampSwing() {
      clearTimeout(swing);
      lamp.style.transition = "none";
      lamp.style.transform = `rotate(${rotation}deg)`;
    }

    function lampSwing() {
      time += 1;
      if (Math.abs(startAngle) > 0.5) {
        rotation = Math.cos(Math.sqrt(gravity / length) * time) * startAngle;
        lamp.style.transform = `rotate(${rotation}deg)`;

        startAngle *= 0.996;
        swing = setTimeout(lampSwing, 1000 / 60);
      } else {
        rotation = 0;
        lamp.style.transform = `rotate(${rotation}deg)`;
      }
    }

    let mousedown = false,
      startDegree;

    lamp.querySelectorAll(".dragable").forEach((element) => {
      element.addEventListener("mousedown", (e) => {
        document.body.classList.add("dragging");

        const deltaX = window.innerWidth / 2 - e.pageX;
        const deltaY = 0 - e.pageY;
        const degree = Math.atan(deltaX / deltaY) * (180 / Math.PI);
        startDegree = rotation;

        mousedown = {
          start: {
            x: e.pageX,
            y: e.pageY,
            deltaX,
            deltaY,
            degree
          },
          event: e
        };
        stopLampSwing();
      });
    });

    document.addEventListener("mousemove", (e) => {
      if (mousedown) {
        const deltaX = window.innerWidth / 2 - e.pageX;
        const deltaY = 0 - e.pageY;
        let degree = Math.atan(deltaX / deltaY) * (180 / Math.PI);

        degree = Math.min(Math.max(startDegree + (mousedown.start.degree - degree), -75), 75);
        lamp.style.transform = `rotate(${degree}deg)`;
        startAngle = degree;
      }
    });

    document.addEventListener("mouseup", () => {
      if (mousedown) {
        document.body.classList.remove("dragging");
        mousedown = false;
        startLampSwing();
      }
    });

    function flicker() {
      toggleLamp();
      setTimeout(() => {
        toggleLamp();
      }, Math.round(Math.random() * 150 + 100));

      setTimeout(flicker, Math.round(Math.random() * 4000 + 100));
    }

    function toggleLamp() {
      lamp.classList.toggle("off");
    }

    flicker();

    // Mostrar mensaje al mover la lámpara
    lamp.addEventListener("mousemove", () => {
      const bubble = document.getElementById("ia-bubble");
      bubble.textContent = "¡Cuidado! La lámpara está en movimiento!";
      bubble.style.display = "block"; // Mostrar burbuja de texto cuando se mueva
    });

    // Mostrar mensaje al hacer hover sobre la lámpara
    lamp.addEventListener("mouseenter", async () => {
      const reply = "¡Estás interactuando con la lámpara!";
      speakText(reply); // El avatar dice el mensaje
    });
  });

  function speakText(text) {
    const bubble = document.getElementById("ia-bubble");
    bubble.textContent = text;
    bubble.style.display = "block"; 

    if (window.speechSynthesis) {
      const utter = new SpeechSynthesisUtterance(text);
      utter.lang = "es-ES";
      utter.pitch = 1;
      utter.rate = 1;
      speechSynthesis.cancel();
      speechSynthesis.speak(utter);
    }
  }
</script>
